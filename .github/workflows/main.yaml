name: CI

on:
  push:
    branches:
      - 'master'
  pull_request:

jobs:
  mod:
    name: Server Modules
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
      - run: go mod download
  build:
    name: Server Build
    runs-on: ubuntu-latest
    needs: [mod]
    env:
      GOCACHE: "/tmp/go/cache"
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-
      - uses: actions/cache@v2
        with:
          path: /tmp/go/cache
          key: ${{ runner.os }}-go-build-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-build-${{ github.ref }}-
            ${{ runner.os }}-go-build-
      - name: build
        run: go build
      - uses: actions/upload-artifact@v2
        with:
          name: booQ
          path: booQ
  lint:
    name: Server Lint
    runs-on: ubuntu-latest
    needs: [mod]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: Install reviewdog
        run: curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b $(go env GOPATH)/bin
      - name: Install golangci-lint
        run: curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s --  -b $(go env GOPATH)/bin
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-
      - name: golangci-lint
        run: golangci-lint run --out-format=line-number | reviewdog -f=golangci-lint -name=golangci-lint -reporter=github-check
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  test:
    name: Server Test
    runs-on: ubuntu-latest
    needs: [build]
    env:
      GOCACHE: "/tmp/go/cache"
      MYSQL_USER: root
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: booq_test
    services:
      mysql:
        image: mariadb:10.6.4
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: booq_test
        ports:
          - 3306:3306
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-
      - uses: actions/cache@v2
        with:
          path: /tmp/go/cache
          key: ${{ runner.os }}-go-build-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-build-${{ github.ref }}-
            ${{ runner.os }}-go-build-
      - name: Setup DB
        run: go run .github/workflows/init.go
      - name: Run model tests
        run: go test . ./model -v -covermode=atomic -vet=off
      - name: Run router tests
        run: go test . ./router -v -covermode=atomic -vet=off
  spectral:
    name: OpenApi Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Spectral checks
        uses: stoplightio/spectral-action@v0.8.2
        with:
          file_glob: docs/swagger.yml
          repo_token: ${{ secrets.GITHUB_TOKEN }}
